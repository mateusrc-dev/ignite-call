// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  // model é pra definir uma entidade
  id         String    @id @default(uuid()) // @id é pra determinar que o campo vai ser o primary key - 'uuid' é pra gerar automaticamente o id
  username   String    @unique // unique é para que não seja permitido carregar username igual
  name       String
  email      String?   @unique
  avatar_url String?
  created_at DateTime  @default(now()) // now é uma função do prisma que vai preencher o campo com o valor atual do registro no banco de dados

  accounts   Account[]
  sessions   Session[]

  @@map("users") // colocando o nome da tabela
}

model Account { // essa entidade é a integração do usuário com algum provider (pode ser mais de um)
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@map("accounts") // colocando o nome da tabela
}

model Session { // cada vez que o usuário fazer o login numa máquina diferente, teremos uma sessão
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  @@map("sessions") // colocando o nome da tabela
}
